"""baseline

Revision ID: fe12dc8feb82
Revises: 
Create Date: 2021-01-19 23:42:00.695822

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fe12dc8feb82'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ApSchedulerEvent',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Code', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=255), nullable=False),
    sa.Column('Description', sa.String(length=1000), nullable=False),
    sa.Column('Class', sa.String(length=255), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    schema='Aps'
    )
    op.create_table('ApSchedulerJob',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('JobId', sa.Unicode(length=191), nullable=True),
    sa.Column('NextRunTime', sa.DateTime(), nullable=True),
    sa.Column('FuncRef', sa.String(length=500), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    schema='Aps'
    )
    op.create_table('ApSchedulerJobsTable',
    sa.Column('id', sa.Unicode(length=191), nullable=False),
    sa.Column('next_run_time', sa.Float(precision=25), nullable=True),
    sa.Column('job_state', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='Aps'
    )
    op.create_index(op.f('ix_Aps_ApSchedulerJobsTable_next_run_time'), 'ApSchedulerJobsTable', ['next_run_time'], unique=False, schema='Aps')
    op.create_table('ConfigParameter',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=255), nullable=False),
    sa.Column('Type', sa.String(length=255), nullable=True),
    sa.Column('Value', sa.String(length=255), nullable=False),
    sa.Column('Description', sa.String(length=1000), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    schema='Common'
    )
    op.create_table('Log',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('TypeId', sa.Integer(), nullable=False),
    sa.Column('Content', sa.String(length=4000), nullable=True),
    sa.Column('LogDatetime', sa.DateTime(), nullable=True),
    sa.Column('JobId', sa.Integer(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    schema='Common'
    )
    op.create_index(op.f('ix_Common_Log_JobId'), 'Log', ['JobId'], unique=False, schema='Common')
    op.create_index(op.f('ix_Common_Log_TypeId'), 'Log', ['TypeId'], unique=False, schema='Common')
    op.create_table('OperationEvent',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Code', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('Description', sa.String(length=250), nullable=False),
    sa.Column('Class', sa.String(length=255), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Code'),
    schema='Common'
    )
    op.create_table('Status',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('Description', sa.String(length=250), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    schema='Common'
    )
    op.create_table('ConnectionType',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Name'),
    schema='Connection'
    )
    op.create_table('Definition',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('Version', sa.Integer(), nullable=False),
    sa.Column('Content', sa.Text(), nullable=True),
    sa.Column('IsActive', sa.Integer(), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('ApSchedulerJobEvent',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('ApSchedulerJobId', sa.Integer(), nullable=True),
    sa.Column('EventId', sa.Integer(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['ApSchedulerJobId'], ['Aps.ApSchedulerJob.Id'], ),
    sa.ForeignKeyConstraint(['EventId'], ['Aps.ApSchedulerEvent.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Aps'
    )
    op.create_table('Connection',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('ConnectionTypeId', sa.Integer(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['ConnectionTypeId'], ['Connection.ConnectionType.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Connection'
    )
    op.create_index(op.f('ix_Connection_Connection_Name'), 'Connection', ['Name'], unique=True, schema='Connection')
    op.create_table('ConnectorType',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('ConnectionTypeId', sa.Integer(), nullable=True),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['ConnectionTypeId'], ['Connection.ConnectionType.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Name'),
    schema='Connection'
    )
    op.create_table('DataIntegration',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DefinitionId', sa.Integer(), nullable=True),
    sa.Column('Code', sa.String(length=100), nullable=False),
    sa.Column('IsTargetTruncate', sa.Boolean(), nullable=True),
    sa.Column('IsDelta', sa.Boolean(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DefinitionId'], ['Operation.Definition.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Integration'
    )
    op.create_index(op.f('ix_Integration_DataIntegration_Code'), 'DataIntegration', ['Code'], unique=True, schema='Integration')
    op.create_table('DataOperation',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DefinitionId', sa.Integer(), nullable=True),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DefinitionId'], ['Operation.Definition.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('ConnectionDatabase',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('ConnectionId', sa.Integer(), nullable=True),
    sa.Column('ConnectorTypeId', sa.Integer(), nullable=True),
    sa.Column('Host', sa.String(length=100), nullable=True),
    sa.Column('Port', sa.Integer(), nullable=True),
    sa.Column('Sid', sa.String(length=100), nullable=True),
    sa.Column('ServiceName', sa.String(length=100), nullable=True),
    sa.Column('DatabaseName', sa.String(length=100), nullable=True),
    sa.Column('User', sa.String(length=100), nullable=True),
    sa.Column('Password', sa.String(length=100), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['ConnectionId'], ['Connection.Connection.Id'], ),
    sa.ForeignKeyConstraint(['ConnectorTypeId'], ['Connection.ConnectorType.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Connection'
    )
    op.create_table('DataIntegrationColumn',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataIntegrationId', sa.Integer(), nullable=True),
    sa.Column('ResourceType', sa.String(length=100), nullable=True),
    sa.Column('SourceColumnName', sa.String(length=100), nullable=True),
    sa.Column('TargetColumnName', sa.String(length=100), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataIntegrationId'], ['Integration.DataIntegration.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Integration'
    )
    op.create_table('DataIntegrationConnection',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataIntegrationId', sa.Integer(), nullable=True),
    sa.Column('ConnectionId', sa.Integer(), nullable=True),
    sa.Column('SourceOrTarget', sa.Integer(), nullable=False),
    sa.Column('Schema', sa.String(length=100), nullable=True),
    sa.Column('TableName', sa.String(length=100), nullable=True),
    sa.Column('Query', sa.Text(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['ConnectionId'], ['Connection.Connection.Id'], ),
    sa.ForeignKeyConstraint(['DataIntegrationId'], ['Integration.DataIntegration.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Integration'
    )
    op.create_table('DataIntegrationExecutionJob',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataIntegrationId', sa.Integer(), nullable=True),
    sa.Column('ExecutionProcedure', sa.String(length=1000), nullable=True),
    sa.Column('IsPre', sa.Boolean(), nullable=True),
    sa.Column('IsPost', sa.Boolean(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataIntegrationId'], ['Integration.DataIntegration.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Integration'
    )
    op.create_table('DataOperationContact',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationId', sa.Integer(), nullable=True),
    sa.Column('Email', sa.String(length=250), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataOperationId'], ['Operation.DataOperation.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('DataOperationIntegration',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationId', sa.Integer(), nullable=True),
    sa.Column('DataIntegrationId', sa.Integer(), nullable=True),
    sa.Column('Order', sa.Integer(), nullable=False),
    sa.Column('Limit', sa.Integer(), nullable=False),
    sa.Column('ProcessCount', sa.Integer(), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataIntegrationId'], ['Integration.DataIntegration.Id'], ),
    sa.ForeignKeyConstraint(['DataOperationId'], ['Operation.DataOperation.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('DataOperationJob',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationId', sa.Integer(), nullable=True),
    sa.Column('ApSchedulerJobId', sa.Integer(), nullable=True),
    sa.Column('StartDate', sa.DateTime(), nullable=False),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('Cron', sa.String(length=100), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['ApSchedulerJobId'], ['Aps.ApSchedulerJob.Id'], ),
    sa.ForeignKeyConstraint(['DataOperationId'], ['Operation.DataOperation.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('DataOperationJobExecution',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationJobId', sa.Integer(), nullable=True),
    sa.Column('DefinitionId', sa.Integer(), nullable=True),
    sa.Column('StatusId', sa.Integer(), nullable=True),
    sa.Column('StartDate', sa.DateTime(), nullable=False),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataOperationJobId'], ['Operation.DataOperationJob.Id'], ),
    sa.ForeignKeyConstraint(['DefinitionId'], ['Operation.Definition.Id'], ),
    sa.ForeignKeyConstraint(['StatusId'], ['Common.Status.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('DataOperationJobExecutionEvent',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationJobExecutionId', sa.Integer(), nullable=True),
    sa.Column('EventId', sa.Integer(), nullable=True),
    sa.Column('EventDate', sa.DateTime(), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataOperationJobExecutionId'], ['Operation.DataOperationJobExecution.Id'], ),
    sa.ForeignKeyConstraint(['EventId'], ['Common.OperationEvent.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('DataOperationJobExecutionIntegration',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationJobExecutionId', sa.Integer(), nullable=True),
    sa.Column('DataOperationIntegrationId', sa.Integer(), nullable=True),
    sa.Column('StatusId', sa.Integer(), nullable=True),
    sa.Column('StartDate', sa.DateTime(), nullable=False),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('Limit', sa.Integer(), nullable=True),
    sa.Column('ProcessCount', sa.Integer(), nullable=True),
    sa.Column('SourceDataCount', sa.Integer(), nullable=True),
    sa.Column('Log', sa.String(length=1000), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataOperationIntegrationId'], ['Operation.DataOperationIntegration.Id'], ),
    sa.ForeignKeyConstraint(['DataOperationJobExecutionId'], ['Operation.DataOperationJobExecution.Id'], ),
    sa.ForeignKeyConstraint(['StatusId'], ['Common.Status.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    op.create_table('DataOperationJobExecutionIntegrationEvent',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('DataOperationJobExecutionIntegrationId', sa.Integer(), nullable=True),
    sa.Column('EventId', sa.Integer(), nullable=True),
    sa.Column('EventDate', sa.DateTime(), nullable=False),
    sa.Column('AffectedRowCount', sa.Integer(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreationDate', sa.DateTime(), nullable=False),
    sa.Column('LastUpdatedUserId', sa.Integer(), nullable=True),
    sa.Column('LastUpdatedDate', sa.DateTime(), nullable=True),
    sa.Column('IsDeleted', sa.Integer(), nullable=False),
    sa.Column('Comments', sa.String(length=1000), nullable=True),
    sa.Column('RowVersion', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['DataOperationJobExecutionIntegrationId'], ['Operation.DataOperationJobExecutionIntegration.Id'], ),
    sa.ForeignKeyConstraint(['EventId'], ['Common.OperationEvent.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    schema='Operation'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('DataOperationJobExecutionIntegrationEvent', schema='Operation')
    op.drop_table('DataOperationJobExecutionIntegration', schema='Operation')
    op.drop_table('DataOperationJobExecutionEvent', schema='Operation')
    op.drop_table('DataOperationJobExecution', schema='Operation')
    op.drop_table('DataOperationJob', schema='Operation')
    op.drop_table('DataOperationIntegration', schema='Operation')
    op.drop_table('DataOperationContact', schema='Operation')
    op.drop_table('DataIntegrationExecutionJob', schema='Integration')
    op.drop_table('DataIntegrationConnection', schema='Integration')
    op.drop_table('DataIntegrationColumn', schema='Integration')
    op.drop_table('ConnectionDatabase', schema='Connection')
    op.drop_table('DataOperation', schema='Operation')
    op.drop_index(op.f('ix_Integration_DataIntegration_Code'), table_name='DataIntegration', schema='Integration')
    op.drop_table('DataIntegration', schema='Integration')
    op.drop_table('ConnectorType', schema='Connection')
    op.drop_index(op.f('ix_Connection_Connection_Name'), table_name='Connection', schema='Connection')
    op.drop_table('Connection', schema='Connection')
    op.drop_table('ApSchedulerJobEvent', schema='Aps')
    op.drop_table('Definition', schema='Operation')
    op.drop_table('ConnectionType', schema='Connection')
    op.drop_table('Status', schema='Common')
    op.drop_table('OperationEvent', schema='Common')
    op.drop_index(op.f('ix_Common_Log_TypeId'), table_name='Log', schema='Common')
    op.drop_index(op.f('ix_Common_Log_JobId'), table_name='Log', schema='Common')
    op.drop_table('Log', schema='Common')
    op.drop_table('ConfigParameter', schema='Common')
    op.drop_index(op.f('ix_Aps_ApSchedulerJobsTable_next_run_time'), table_name='ApSchedulerJobsTable', schema='Aps')
    op.drop_table('ApSchedulerJobsTable', schema='Aps')
    op.drop_table('ApSchedulerJob', schema='Aps')
    op.drop_table('ApSchedulerEvent', schema='Aps')
    # ### end Alembic commands ###
    op.execute('DROP SCHEMA "Aps"')
    op.execute('DROP SCHEMA "Connection"')
    op.execute('DROP SCHEMA "Integration"')
    op.execute('DROP SCHEMA "Operation"')
